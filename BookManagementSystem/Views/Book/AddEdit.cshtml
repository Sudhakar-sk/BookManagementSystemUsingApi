@model BookManagementSystem.Core.Modal.BookDetails
@{
    ViewBag.Title = "AddEdit";
}
@*<link href="~/css/AddEdit.css" rel="stylesheet" />*@
<script src="~/js/site.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
@section Scripts
    {
    <partial name="_ValidationScriptsPartial" />
}
<style>
    .error {
        color: red;
    }
    .bg-design2 {
        background-color: #FFFFFF;
        /* width: 400px; */
        /* height: 356px; */
        /* margin: 7em auto; */
        border-radius: 1.5em;
        box-shadow: 0px 11px 35px 2px rgb(0 0 0 / 14%);
    }
    .bg-design1 {
        background-color: #F3EBF6;
        font-family: 'Ubuntu', sans-serif;
    }
    .btn-align{
        text-align:center;
    }
    .log-title
    {
        text-align: center;
        color: #0026ff;
        font-family: 'Ubuntu', sans-serif;
        font-weight: bold;
        font-size: 23px;
        padding-top: 40px;
    }
</style>



<div class="container bg-design1">
   
    <button class="btn btn-primary btn-sm add float-right" onclick="BookList()">BookList</button>



    <div class="row">
        <div class=" col-lg-4 offset-lg-5 bg-design2">
            <h2 class="log-title " style="text-align:center;color:#0026ff">BOOK INFO</h2>
            @using (Html.BeginForm("AddBookDetails", "Book", FormMethod.Post, new { @class = "agile_form", @id = "formDetails", autocomplete = "off" }))
            {
                @Html.HiddenFor(model => model.BookId)

                @*@if (Model != null)
                {*@
                    <div class="form-group">
                   <label>BookAuthor</label>
                   <div>
                       @*<div class="form-group col-lg-2 col-mg-2">@Html.DropDownListFor(Modal => Modal.BookAuthor, (IEnumerable<SelectListItem>)ViewBag.author, "-Select Author-", new { @class = "form-control" })</div>*@
                       @Html.DropDownList("BookAuthor", new SelectList(@Model.AuthorList, "AuthorId", "BookAuthor"), "select-Author", new { @class = "form-control" })
                   </div>
                 </div>
                @*}*@



                @*<div class="form-group">
                    <label>BookAuthor</label>
                    @Html.EditorFor(Modal => Modal.BookAuthor, new { HtmlAttributes = new { @type = "text", @class = "input form-control", @maxlength = "150", @placeholder = "BookAuthor Name" } })

                </div>*@

                <div class="form-group">
                    <label>BookTitle</label>
                    @Html.EditorFor(Modal => Modal.BookTitle, new { HtmlAttributes = new { @type = "text", @class = "input form-control", @maxlength = "150", @placeholder = "BookTitle Name" } })

                </div>

                <div class="form-group">
                    <label>Price</label>
                    @Html.EditorFor(Modal => Modal.Price, new { HtmlAttributes = new { @type = "number", @class = " input form-control", @placeholder = "Enter Book Price", @maxlength = "3", @id = "Price" } })
                </div>


                <div class="form-group">
                    <div class="btn-align ">

                        @if (Model.BookId != 0)
                        {
                            <button type="submit" class="btn btn-success" onclick="SubmitDetails()">Update</button>

                        }
                        else
                        {
                            <button type="submit" class="btn btn-success" onclick="SubmitDetails()">Submit</button>

                        }
                        <button type="button" class="btn btn-outline-secondary" onclick="Reset()">Reset</button>
                        <button type="button" class="btn btn-danger" onclick="Cancel()">Cancel</button>
                    </div>
                </div>

            }

        </div>
    </div>
</div>


<script>

    function BookList()
    {
        window.location.href = "@Url.Action("BookDetailList", "Book")";
    }

    function Cancel()
    {
        if (confirm("Are you Sure You Want to Cancel"))
        {
            window.location.href = "@Url.Action("BookDetailList", "Book")";
        }
    }

    function Reset()
    {
        $("#BookTitle").val("");
        $("#BookAuthor").val("");
        $("#Price").val("");
    }

    $(function()
    {
        if ($("#BookId").val() == 0)
        {
            $("#BookTitle").val("");
            $("#BookAuthor").val("");
            $("#Price").val("");       
        }
    });
    $(function () {

        var form = $('#formDetails').get(0);
        $.removeData(form, 'validator');
        validator = $('#formDetails').validate({
            rules:
            {
                BookTitle:
                {
                    required:true,
                    maxlength: 150

                },

                BookAuthor:
                {
                    required: true,
                    maxlength: 100,

                },
                Price:
                {
                    required: true,
                    maxlength: 6,
                },

            },
            messages:
            {

                BookTitle:
                {
                    required: " BookTitle is required",
                    maxlength: " BookTitle should be 150 charcter",
                  
                },
                BookAuthor:
                {
                    required: " BookAuthor is required",
                    maxlength: " BookAuthor should be 100 charcter",
                  
                },
                Price:
                {
                    required: "Price is required",
                    maxlength: "Price should be 6 digits",                 
                }
            }
        });
    });

    function SubmitDetails() {

        if ($("#formDetails").valid())
        {
            $("#formDetails").submit();
        }
    }
</script>